# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
name: Rhino.Widget.$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
# extract build version from Build.BuildNumber parameter and pass it as Build.Version
- task: PowerShell@2
  displayName: 'parse build version for git-hub tag'
  inputs:
    targetType: 'inline'
    script: |
      # setup
      #
      [regex]$pattern = '(\d+.?)+'
      $version        = $pattern.Matches('$(Build.BuildNumber)') | foreach-object {$_.Value}      
      #
      # set value
      Write-Host "##vso[task.setvariable variable=Build.Version]$version"

# copy files
- task: CopyFiles@2
  displayName: copy files
  inputs:
    SourceFolder: '.\src\js'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/src/js'

# write build version from Build.BuildNumber parameter inte manifest
- task: PowerShell@2
  displayName: 'parse build version for git-hub tag'
  inputs:
    targetType: 'inline'
    script: |
      # set new version
      $manifest         = (Get-Content -Path '$(Build.ArtifactStagingDirectory)\src\js\manifest.json') | ConvertFrom-Json
      $manifest.version = "$(Build.Version)"
      $content          = $manifest | ConvertTo-Json
      #
      # apply
      Set-Content -Path '$(Build.ArtifactStagingDirectory)\src\js\manifest.json' -Value $content -Force

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\src\js'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
    replaceExistingArchive: true
    verbose: true

- task: GitHubRelease@1
  displayName: 'create GitHub tag'
  inputs:
    gitHubConnection: 'GitHub connection - Rhino API'
    repositoryName: 'savanna-projects/rhino-widget'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(Build.Version)'
    title: 'Production v$(Build.Version)'
    releaseNotesSource: 'inline'
    assets: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'